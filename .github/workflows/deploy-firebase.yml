name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - '**' # Runs on all pushes to any branch
  pull_request:
    branches:
      - '**' # Runs on all pull requests to any branch
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        type: string

env:
  GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
  CHAT_API_ENDPOINT: ${{ vars.CHAT_API_ENDPOINT }}
  DEFAULT_CHAT_LOCATION: ${{ vars.DEFAULT_CHAT_LOCATION }}

jobs:
  call_reusable_build:
    uses: ./.github/workflows/reusable-build-test.yml
    with:
      node-version: '20' # Firebase workflow uses Node 20
      expo-working-directory: 'ExpoGallery'
      output-path: 'dist' # Standard output path from reusable workflow
      # cache-dependency-path is not specified, so it will use default from reusable workflow
    # secrets: inherit # If reusable workflow needed secrets

  build_and_deploy_firebase:
    needs: call_reusable_build
    runs-on: ubuntu-latest
    # Removed if: success() because reusable workflow failing will prevent this from running.
    steps:
      # Checkout code for Firebase tools, firebase.json, and scripts not in artifact.
      # Also needed for github.sha if not available otherwise, though it should be.
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.call_reusable_build.outputs.build_artifact_name }}
          path: downloaded-artifact # Downloads to ./downloaded-artifact/

      - name: Debug artifact contents
        run: |
          echo "=== Artifact contents ==="
          find downloaded-artifact -type f | head -20
          echo "=== Looking for version.json ==="
          find downloaded-artifact -name "version.json" -type f
          echo "=== Contents of downloaded-artifact ==="
          ls -la downloaded-artifact/

      - name: Prepare Firebase deployment directory
        run: |
          # Since the artifact contains the dist contents directly, we need to use downloaded-artifact as the source
          mkdir -p site/public
          echo "Copying downloaded-artifact -> site/public"
          cp -r downloaded-artifact/* site/public/

          # Verify version.json exists
          if [ ! -f "site/public/public/version.json" ]; then
            echo "Error: version.json not found at site/public/public/version.json"
            echo "Looking for version.json in site/public:"
            find site/public -name "version.json" -type f || echo "No version.json found"
            exit 1
          fi
          echo "Successfully prepared Firebase directory"


      - name: Determine Firebase Channel ID
        id: channel_id
        run: |
          node ExpoGallery/scripts/getFirebaseChannelId.js
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_EVENT_NUMBER: ${{ github.event.number }}
          INPUT_BRANCH: ${{ github.event.inputs.branch }}
      - name: Replace GITHUB_SHA in about.html
        run: |
          node ExpoGallery/scripts/replaceGithubSha.js site/public/about.html "${{ github.sha }}"
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase_deploy
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MAPCHATAI }}
          entryPoint: ./site # Path to the directory containing firebase.json and public/
          projectId: mapchatai
          channelId: ${{ steps.channel_id.outputs.channel_id }}

      - name: Verify deployed SHA
        run: |
          node ExpoGallery/scripts/verifyDeployedSha.js \
            "${{ steps.channel_id.outputs.channel_id }}" \
            mapchatai \
            '${{ steps.firebase_deploy.outputs.details }}' \
            '${{ needs.call_reusable_build.outputs.version_json_relative_path }}' \
            '${{ github.sha }}'
